#############################################################################
# Makefile for building: mediacontroller
# Generated by qmake (2.01a) (Qt 4.6.2) on: Wed Mar 17 02:19:07 2010
# Project:  mediacontroller.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile mediacontroller.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I/usr/include -I$(HOME)/src/linux/uvcvideo-mc/linux/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/usr/lib64/qt4
LIBS          = $(SUBLIBS)  -L/usr/lib64/qt4 -lQtGui -L/usr/lib64 -L/usr/lib64/qt4 -L/usr/X11R6/lib -lQtCore -lgthread-2.0 -lrt -lglib-2.0 -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		link.cpp \
		mediaviewerwindow.cpp \
		entity.cpp \
		mediadevice.cpp \
		graphicsentity.cpp \
		mediagraphicsscene.cpp \
		graphicsarrow.cpp \
		subdevice.cpp \
		v4l2control.cpp \
		mediadevicepool.cpp \
		subdevicepool.cpp \
		controlwidget.cpp \
		pad.cpp \
		graphicspadcontainer.cpp \
		fakemedia.cpp \
		fakeentity.cpp moc_mediaviewerwindow.cpp \
		moc_mediagraphicsscene.cpp \
		moc_v4l2control.cpp \
		moc_mediadevicepool.cpp
OBJECTS       = main.o \
		link.o \
		mediaviewerwindow.o \
		entity.o \
		mediadevice.o \
		graphicsentity.o \
		mediagraphicsscene.o \
		graphicsarrow.o \
		subdevice.o \
		v4l2control.o \
		mediadevicepool.o \
		subdevicepool.o \
		controlwidget.o \
		pad.o \
		graphicspadcontainer.o \
		fakemedia.o \
		fakeentity.o \
		moc_mediaviewerwindow.o \
		moc_mediagraphicsscene.o \
		moc_v4l2control.o \
		moc_mediadevicepool.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		mediacontroller.pro
QMAKE_TARGET  = mediacontroller
DESTDIR       = 
TARGET        = mediacontroller

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mediaviewerwindow.h ui_controlwidget.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: mediacontroller.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/qt4/libQtGui.prl \
		/usr/lib64/qt4/libQtCore.prl
	$(QMAKE) -unix -o Makefile mediacontroller.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/qt4/libQtGui.prl:
/usr/lib64/qt4/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile mediacontroller.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/mediacontroller1.0.0 || $(MKDIR) .tmp/mediacontroller1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/mediacontroller1.0.0/ && $(COPY_FILE) --parents link.h mediaviewerwindow.h entity.h mediadevice.h graphicsentity.h mediagraphicsscene.h graphicsarrow.h subdevice.h v4l2control.h mediadevicepool.h subdevicepool.h controlwidget.h pad.h graphicspadcontainer.h fakemedia.h fakeentity.h .tmp/mediacontroller1.0.0/ && $(COPY_FILE) --parents main.cpp link.cpp mediaviewerwindow.cpp entity.cpp mediadevice.cpp graphicsentity.cpp mediagraphicsscene.cpp graphicsarrow.cpp subdevice.cpp v4l2control.cpp mediadevicepool.cpp subdevicepool.cpp controlwidget.cpp pad.cpp graphicspadcontainer.cpp fakemedia.cpp fakeentity.cpp .tmp/mediacontroller1.0.0/ && $(COPY_FILE) --parents mediaviewerwindow.ui controlwidget.ui .tmp/mediacontroller1.0.0/ && (cd `dirname .tmp/mediacontroller1.0.0` && $(TAR) mediacontroller1.0.0.tar mediacontroller1.0.0 && $(COMPRESS) mediacontroller1.0.0.tar) && $(MOVE) `dirname .tmp/mediacontroller1.0.0`/mediacontroller1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/mediacontroller1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mediaviewerwindow.cpp moc_mediagraphicsscene.cpp moc_v4l2control.cpp moc_mediadevicepool.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mediaviewerwindow.cpp moc_mediagraphicsscene.cpp moc_v4l2control.cpp moc_mediadevicepool.cpp
moc_mediaviewerwindow.cpp: ui_mediaviewerwindow.h \
		controlwidget.h \
		ui_controlwidget.h \
		mediaviewerwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mediaviewerwindow.h -o moc_mediaviewerwindow.cpp

moc_mediagraphicsscene.cpp: mediagraphicsscene.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mediagraphicsscene.h -o moc_mediagraphicsscene.cpp

moc_v4l2control.cpp: v4l2control.h
	/usr/bin/moc $(DEFINES) $(INCPATH) v4l2control.h -o moc_v4l2control.cpp

moc_mediadevicepool.cpp: mediadevicepool.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mediadevicepool.h -o moc_mediadevicepool.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mediaviewerwindow.h ui_controlwidget.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mediaviewerwindow.h ui_controlwidget.h
ui_mediaviewerwindow.h: mediaviewerwindow.ui \
		controlwidget.h \
		ui_controlwidget.h
	/usr/bin/uic mediaviewerwindow.ui -o ui_mediaviewerwindow.h

ui_controlwidget.h: controlwidget.ui
	/usr/bin/uic controlwidget.ui -o ui_controlwidget.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mediaviewerwindow.h \
		ui_mediaviewerwindow.h \
		controlwidget.h \
		ui_controlwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

link.o: link.cpp link.h \
		entity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o link.o link.cpp

mediaviewerwindow.o: mediaviewerwindow.cpp mediaviewerwindow.h \
		ui_mediaviewerwindow.h \
		controlwidget.h \
		ui_controlwidget.h \
		mediadevice.h \
		mediagraphicsscene.h \
		entity.h \
		subdevice.h \
		v4l2control.h \
		mediadevicepool.h \
		subdevicepool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mediaviewerwindow.o mediaviewerwindow.cpp

entity.o: entity.cpp entity.h \
		pad.h \
		link.h \
		subdevice.h \
		subdevicepool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o entity.o entity.cpp

mediadevice.o: mediadevice.cpp mediadevice.h \
		entity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mediadevice.o mediadevice.cpp

graphicsentity.o: graphicsentity.cpp graphicsentity.h \
		graphicspadcontainer.h \
		pad.h \
		entity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicsentity.o graphicsentity.cpp

mediagraphicsscene.o: mediagraphicsscene.cpp mediagraphicsscene.h \
		graphicsarrow.h \
		mediadevice.h \
		graphicsentity.h \
		entity.h \
		link.h \
		pad.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mediagraphicsscene.o mediagraphicsscene.cpp

graphicsarrow.o: graphicsarrow.cpp graphicsarrow.h \
		graphicsentity.h \
		entity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicsarrow.o graphicsarrow.cpp

subdevice.o: subdevice.cpp subdevice.h \
		v4l2control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o subdevice.o subdevice.cpp

v4l2control.o: v4l2control.cpp v4l2control.h \
		subdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o v4l2control.o v4l2control.cpp

mediadevicepool.o: mediadevicepool.cpp mediadevicepool.h \
		mediadevice.h \
		fakemedia.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mediadevicepool.o mediadevicepool.cpp

subdevicepool.o: subdevicepool.cpp subdevicepool.h \
		subdevice.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o subdevicepool.o subdevicepool.cpp

controlwidget.o: controlwidget.cpp controlwidget.h \
		ui_controlwidget.h \
		subdevice.h \
		v4l2control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controlwidget.o controlwidget.cpp

pad.o: pad.cpp pad.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pad.o pad.cpp

graphicspadcontainer.o: graphicspadcontainer.cpp graphicspadcontainer.h \
		pad.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicspadcontainer.o graphicspadcontainer.cpp

fakemedia.o: fakemedia.cpp fakemedia.h \
		mediadevice.h \
		fakeentity.h \
		entity.h \
		pad.h \
		link.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fakemedia.o fakemedia.cpp

fakeentity.o: fakeentity.cpp fakeentity.h \
		entity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fakeentity.o fakeentity.cpp

moc_mediaviewerwindow.o: moc_mediaviewerwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mediaviewerwindow.o moc_mediaviewerwindow.cpp

moc_mediagraphicsscene.o: moc_mediagraphicsscene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mediagraphicsscene.o moc_mediagraphicsscene.cpp

moc_v4l2control.o: moc_v4l2control.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_v4l2control.o moc_v4l2control.cpp

moc_mediadevicepool.o: moc_mediadevicepool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mediadevicepool.o moc_mediadevicepool.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

